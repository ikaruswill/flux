#
# Compile
#

FROM golang:1.13-alpine as compile
COPY ./kubectl.version ./kustomize.version ./sops.version /
ARG FLUX_VERSION=1.17.0
ENV GO111MODULE=on \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=arm \
    GOARM=7

# build fluxd
WORKDIR /go/src/github.com/fluxcd/flux
RUN apk add --no-cache \
      openssh-client ca-certificates tini 'git>=2.12.0' 'gnutls>=3.6.7' gnupg gawk socat build-base gcc wget git bash curl \
    && update-ca-certificates
RUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing git-secret
# RUN git clone --depth 1 -b ${FLUX_VERSION} https://github.com/fluxcd/flux.git . \
RUN git clone --depth 1 -b ${FLUX_VERSION} https://github.com/ikaruswill/flux.git . \
    && git fetch --no-tags origin ikaruswill/multiarch-fix:refs/remotes/origin/ikaruswill/multiarch-fix \
    && git checkout origin/ikaruswill/multiarch-fix pkg/registry/client.go \
    && go build -o fluxd -installsuffix cgo ./cmd/fluxd

# download fluxctl
RUN curl -L https://github.com/fluxcd/flux/releases/download/${FLUX_VERSION}/fluxctl_linux_arm -o ./fluxctl \
    && chmod a+x ./fluxctl

# build kustomize
WORKDIR /go/src/github.com/kubernetes-sigs/kustomize
RUN . /kustomize.version \
    && git clone --depth 1 -b kustomize/v${KUSTOMIZE_VERSION} https://github.com/kubernetes-sigs/kustomize.git . \
    && cd kustomize \
    && go build -o kustomize -installsuffix cgo .

# build sops
WORKDIR /go/src/github.com/mozilla/sops
RUN . /sops.version \
    && git clone --depth 1 -b ${SOPS_VERSION} https://github.com/mozilla/sops.git . \
    && go build -o sops ./cmd/sops

# download kubectl
WORKDIR /kubernetes
RUN . /kubectl.version \
    && curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/arm/kubectl -o ./kubectl \
    && chmod a+x ./kubectl

#
# Build
#

FROM alpine:3.10
WORKDIR /home/flux

RUN apk add --no-cache openssh-client ca-certificates tini 'git>=2.12.0' 'gnutls>=3.6.7' gnupg gawk socat
RUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing git-secret

# Add git hosts to known hosts file so we can use
# StrickHostKeyChecking with git+ssh
ADD ./known_hosts.sh /home/flux/known_hosts.sh
RUN sh /home/flux/known_hosts.sh /etc/ssh/ssh_known_hosts && \
    rm /home/flux/known_hosts.sh

# Add default SSH config, which points at the private key we'll mount
COPY ./ssh_config /etc/ssh/ssh_config

# Kubectl, Kustomize
COPY --from=compile /kubernetes/kubectl /usr/local/bin/
COPY --from=compile /go/src/github.com/kubernetes-sigs/kustomize/kustomize/kustomize /usr/local/bin/
# TODO: mozilla/sops has no arm binaries

ENTRYPOINT [ "/sbin/tini", "--", "fluxd" ]

# Get the kubeyaml binary (files) and put them on the path
COPY --from=ikaruswill/kubeyaml:0.7.0 /usr/lib/kubeyaml /usr/lib/kubeyaml/
ENV PATH=/bin:/usr/bin:/usr/local/bin:/usr/lib/kubeyaml

# Create minimal nsswitch.conf file to prioritize the usage of /etc/hosts over DNS queries.
# This resolves the conflict between:
# * fluxd using netgo for static compilation. netgo reads nsswitch.conf to mimic glibc,
#   defaulting to prioritize DNS queries over /etc/hosts if nsswitch.conf is missing:
#   https://github.com/golang/go/issues/22846
# * Alpine not including a nsswitch.conf file. Since Alpine doesn't use glibc
#   (it uses musl), maintainers argue that the need of nsswitch.conf is a Go bug:
#   https://github.com/gliderlabs/docker-alpine/issues/367#issuecomment-354316460
RUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf
COPY ./kubeconfig /root/.kube/config
COPY --from=compile /go/src/github.com/fluxcd/flux/fluxd /usr/local/bin/

# Copy other compiled artifacts
COPY --from=compile /go/src/github.com/fluxcd/flux/fluxctl /usr/local/bin/
